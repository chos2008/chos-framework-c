#include <stdlib.h>
#include "Instance.hpp"

Instance::Instance() 
{

}

Instance::Instance(int id, int idx, char* name, AbstractLinkedBarrier *barrier)
{
	this->id = id;
	this->idx = idx;
    this->name = name;
	this->barrier = barrier;
}

int Instance::getId() 
{
    return this->id;
}

int Instance::getIndex()
{
	return this->idx;
}

char* Instance::getName() 
{
    return this->name;
}

AbstractLinkedBarrier* Instance::getBarrier()
{
	return this->barrier;
}

void Instance::insert(AbstractLinkedBarrier * barrier) 
{
	if (this->barrier == NULL) 
	{
	    this->barrier = barrier;
		this->lastBarrier = this->barrier;
	}
	else 
	{
	    this->lastBarrier->setNext(barrier);
		this->lastBarrier = barrier;
	}
}

AbstractLinkedBarrier * Instance::getLastPassedBarrier() 
{
    return NULL;
}

AbstractLinkedBarrier * Instance::getLastFightedBarrier()
{
    return NULL;
}

AbstractLinkedBarrier * Instance::last()
{
    return this->lastBarrier;
}